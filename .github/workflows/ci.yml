name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NPM_CONFIG_ENGINE_STRICT: 'false'
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm config set engine-strict false
      - run: npm install
      - run: npm run lint
      - run: npm run typecheck
      - name: Types-only check for test d.ts
        run: npx -y ts-node --compiler-options '{"allowImportingTsExtensions":true,"module":"esnext"}' --transpile-only tests/types.test-d.ts || true
      - run: npm test
      - run: npm run build

  bun:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - run: bun install --no-save
      - run: bun run build
      - name: Run Node example under Bun
        run: bun examples/node/index.mjs

  workers-smoke:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - run: npm install
      - name: Build
        run: npm run build
      - name: Wrangler dev smoke (Miniflare under the hood)
        run: |
          cd examples/workers
          npx wrangler dev --local --port 8787 &
          sleep 5
          curl -sSf http://127.0.0.1:8787 > /dev/null

  deno:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - run: npm install
      - run: npm run build
      - name: Run Deno smoke
        run: deno run --allow-net --config examples/deno/deno.json examples/deno/smoke.ts


